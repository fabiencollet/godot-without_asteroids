[gd_resource type="VisualShader" load_steps=10 format=2]

[sub_resource type="VisualShaderNodeVectorOp" id=8]

[sub_resource type="VisualShaderNodeScalarFunc" id=1]
function = 0

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarOp" id=3]
default_input_values = [ 0, 0.0, 1, 1.0 ]

[sub_resource type="VisualShaderNodeScalarOp" id=4]
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 3

[sub_resource type="VisualShaderNodeScalarConstant" id=5]
constant = 20.0

[sub_resource type="VisualShaderNodeScalarOp" id=6]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=7]
input_name = "texture"

[sub_resource type="VisualShaderNodeTexture" id=9]
source = 2

[resource]
code = "shader_type canvas_item;



void vertex() {
// Output:0

}

void fragment() {
// Input:8

// Texture:9
	vec3 n_out9p0;
	float n_out9p1;
	{
		vec4 _tex_read = texture(TEXTURE , UV.xy);
		n_out9p0 = _tex_read.rgb;
		n_out9p1 = _tex_read.a;
	}

// Scalar:6
	float n_out6p0 = 20.000000;

// Input:3
	float n_out3p0 = TIME;

// ScalarOp:7
	float n_out7p0 = n_out6p0 * n_out3p0;

// ScalarFunc:2
	float n_out2p0 = sin(n_out7p0);

// ScalarOp:4
	float n_in4p1 = 1.00000;
	float n_out4p0 = n_out2p0 + n_in4p1;

// ScalarOp:5
	float n_in5p1 = 2.00000;
	float n_out5p0 = n_out4p0 / n_in5p1;

// VectorOp:10
	vec3 n_out10p0 = n_out9p0 + vec3(n_out5p0);

// Output:0
	COLOR.rgb = n_out10p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -39, 8 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 1000, 160 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -220, 140 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -620, 200 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 20, 180 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( 360, 260 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( -640, 40 )
nodes/fragment/7/node = SubResource( 6 )
nodes/fragment/7/position = Vector2( -420, 100 )
nodes/fragment/8/node = SubResource( 7 )
nodes/fragment/8/position = Vector2( 180, 80 )
nodes/fragment/9/node = SubResource( 9 )
nodes/fragment/9/position = Vector2( 360, 20 )
nodes/fragment/10/node = SubResource( 8 )
nodes/fragment/10/position = Vector2( 740, 140 )
nodes/fragment/connections = PoolIntArray( 2, 0, 4, 0, 4, 0, 5, 0, 6, 0, 7, 0, 3, 0, 7, 1, 7, 0, 2, 0, 8, 0, 9, 2, 9, 0, 10, 0, 5, 0, 10, 1, 10, 0, 0, 0 )
