[gd_resource type="VisualShader" load_steps=8 format=2]

[sub_resource type="VisualShaderNodeCompare" id=7]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 0.6, 2, 1e-05 ]
function = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=8]
uniform_name = "Mask"

[sub_resource type="VisualShaderNodeScalarFunc" id=12]
output_port_for_preview = 0
function = 31

[sub_resource type="VisualShaderNodeScalarOp" id=13]
operator = 9

[sub_resource type="VisualShaderNodeTextureUniform" id=14]
uniform_name = "mask_texture"

[sub_resource type="VisualShaderNodeColorUniform" id=6]
output_port_for_preview = 0
uniform_name = "ColorUniform"

[sub_resource type="VisualShaderNodeVectorDecompose" id=11]
output_port_for_preview = 0

[resource]
code = "shader_type canvas_item;
uniform vec4 ColorUniform : hint_color;
uniform sampler2D mask_texture;
uniform float Mask;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:8
	vec3 n_out8p0 = ColorUniform.rgb;
	float n_out8p1 = ColorUniform.a;

// TextureUniform:23
	vec3 n_out23p0;
	float n_out23p1;
	{
		vec4 n_tex_read = texture(mask_texture, UV.xy);
		n_out23p0 = n_tex_read.rgb;
		n_out23p1 = n_tex_read.a;
	}

// VectorDecompose:9
	float n_out9p0 = n_out23p0.x;
	float n_out9p1 = n_out23p0.y;
	float n_out9p2 = n_out23p0.z;

// ScalarUniform:13
	float n_out13p0 = Mask;

// ScalarOp:22
	float n_out22p0 = step(n_out9p0, n_out13p0);

// Output:0
	COLOR.rgb = n_out8p0;
	COLOR.a = n_out22p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -835, -253.5 )
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2( 520, 160 )
nodes/fragment/8/node = SubResource( 6 )
nodes/fragment/8/position = Vector2( -100, 360 )
nodes/fragment/9/node = SubResource( 11 )
nodes/fragment/9/position = Vector2( -260, -40 )
nodes/fragment/10/node = SubResource( 7 )
nodes/fragment/10/position = Vector2( 200, 20 )
nodes/fragment/13/node = SubResource( 8 )
nodes/fragment/13/position = Vector2( -180, -220 )
nodes/fragment/21/node = SubResource( 12 )
nodes/fragment/21/position = Vector2( 60, -220 )
nodes/fragment/22/node = SubResource( 13 )
nodes/fragment/22/position = Vector2( 524, -167 )
nodes/fragment/23/node = SubResource( 14 )
nodes/fragment/23/position = Vector2( -619, -70.5 )
nodes/fragment/connections = PoolIntArray( 8, 0, 0, 0, 9, 0, 10, 0, 13, 0, 21, 0, 21, 0, 10, 1, 9, 0, 22, 0, 22, 0, 0, 1, 13, 0, 22, 1, 23, 0, 9, 0 )
